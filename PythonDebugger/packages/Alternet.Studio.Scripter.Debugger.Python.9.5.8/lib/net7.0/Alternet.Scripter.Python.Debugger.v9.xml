<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Alternet.Scripter.Python.Debugger.v9</name>
    </assembly>
    <members>
        <member name="T:Alternet.Scripter.Debugger.Python.PythonStartDebuggingOptions">
            <summary>
            Defines debug process settings.
            </summary>
        </member>
        <member name="P:Alternet.Scripter.Debugger.Python.PythonStartDebuggingOptions.Default">
            <summary>
            Defines default debug process settings.
            </summary>
        </member>
        <member name="T:Alternet.Scripter.Debugger.Python.ExpressionEvaluation.DynamicMembersEvaluator">
            <summary>
            Evaluates Python dynamic object members.
            </summary>
        </member>
        <member name="M:Alternet.Scripter.Debugger.Python.ExpressionEvaluation.ExpressionEvaluator.GetCodeCompletionService(Alternet.Scripter.Debugger.ExecutionPosition,Alternet.Scripter.Debugger.ExpressionEvaluation.CodeCompletion.KeyConfiguration)">
            <summary>
            Gets <c>ICodeCompletionService</c> object used to provide code completion for the expression evaluation.
            </summary>
            <param name="position">current execution position</param>
            <param name="keyConfiguration">key configuration</param>
            <returns></returns>
        </member>
        <member name="M:Alternet.Scripter.Debugger.Python.ScopeResolutionService.Reset">
            <summary>
            Resets scope evaluator.
            </summary>
        </member>
        <member name="M:Alternet.Scripter.Debugger.Python.ScopeResolutionService.GetMethodName(System.String,System.Drawing.Point,System.Collections.Generic.IList{System.String},System.Boolean,System.Boolean)">
            <summary>
            Gets method name and parameters and given source position.
            </summary>
            <param name="fileName">file name go parse</param>
            <param name="position">position within the file</param>
            <param name="parameters">receives list of parameters</param>
            <param name="includeParamNames">Indicate if parameter names should be included</param>
            <param name="includeParamTypes">Indicate if parameter types should be included</param>
            <returns>Method name if found, otherwise empty string.</returns>
        </member>
        <member name="M:Alternet.Scripter.Debugger.Python.ScopeResolutionService.GetRelativeFilePath(System.String)">
            <summary>
            Gets path relative to the script location
            </summary>
            <param name="fileName">file name.</param>
            <returns>file name relative to the script location.</returns>
        </member>
        <member name="T:Alternet.Scripter.Debugger.Python.ErrorMessages">
            <summary>
            Contains default string constants related to debugger errors.
            </summary>
        </member>
        <member name="T:Alternet.Scripter.Debugger.Python.ScriptBreakpoints">
            <summary>
            Provides list of <c>Breakpoint</c> objects.
            </summary>
        </member>
        <member name="M:Alternet.Scripter.Debugger.Python.ScriptBreakpoints.#ctor(Alternet.Scripter.Debugger.IScriptDebuggerBase)">
            <summary>
            Initializes a new instance of the <c>ScriptBreakpoints</c> class with corresponds to specified <c>ScriptDebugger</c> object.
            </summary>
            <param name="debugger"><c>ScriptDebugger</c> that owns this new instance.</param>
        </member>
        <member name="T:Alternet.Scripter.Debugger.Python.ScriptDebugger">
            <summary>
            Enables communication with a debugger.
            </summary>
        </member>
        <member name="E:Alternet.Scripter.Debugger.Python.ScriptDebugger.BeforeContinue">
            <summary>
            Occurs before debugger continues to program execution.
            </summary>
        </member>
        <member name="E:Alternet.Scripter.Debugger.Python.ScriptDebugger.BeforeStep">
            <summary>
            Occurs before debugger performs a step.
            </summary>
        </member>
        <member name="E:Alternet.Scripter.Debugger.Python.ScriptDebugger.BeforeStop">
            <summary>
            Occurs before debugger stop debugging.
            </summary>
        </member>
        <member name="E:Alternet.Scripter.Debugger.Python.ScriptDebugger.SourceFileLocationResolve">
            <summary>
            Occurs when source file location resolution is requested.
            </summary>
        </member>
        <member name="P:Alternet.Scripter.Debugger.Python.ScriptDebugger.RecursionLimit">
            <summary>
            Gets or sets an integer value indicating default recursion level.
            </summary>
        </member>
        <member name="P:Alternet.Scripter.Debugger.Python.ScriptDebugger.Options">
            <summary>
            Gets start debugging options.
            </summary>
        </member>
        <member name="P:Alternet.Scripter.Debugger.Python.ScriptDebugger.Breakpoints">
            <summary>
            Returns collection of debugger breakpoints.
            </summary>
        </member>
        <member name="P:Alternet.Scripter.Debugger.Python.ScriptDebugger.EventsSyncAction">
            <summary>
            Gets or sets an action used to synchronize events raising.
            This is normally a function provided by the application to sync raised debugger events (for example, perform Control.Invoke)
            </summary>
        </member>
        <member name="P:Alternet.Scripter.Debugger.Python.ScriptDebugger.IsStarted">
            <summary>
            Indicates whether debugging was started.
            </summary>
        </member>
        <member name="P:Alternet.Scripter.Debugger.Python.ScriptDebugger.State">
            <summary>
            Gets current debugger state.
            </summary>
        </member>
        <member name="P:Alternet.Scripter.Debugger.Python.ScriptDebugger.ExpressionEvaluator">
            <summary>
            Gets <c>IExpressionEvaluator</c> object used to evaluate expressions.
            </summary>
        </member>
        <member name="P:Alternet.Scripter.Debugger.Python.ScriptDebugger.ScopeResolutionService">
            <summary>
            Gets <c>IExpressionEvaluator</c> object used to evaluate expressions.
            </summary>
        </member>
        <member name="M:Alternet.Scripter.Debugger.Python.ScriptDebugger.EnableBreakpoint(System.String,System.Int32,System.Boolean)">
            <summary>
            Enables or disables breakpoint at specified position.
            </summary>
            <param name="filePath">Name of file where breakpoint is set.</param>
            <param name="lineNumber">Index of line at which breakpoint is set.</param>
            <param name="enable">New breakpoint's state.</param>
        </member>
        <member name="M:Alternet.Scripter.Debugger.Python.ScriptDebugger.AddBreakpoint(System.String,System.Int32)">
            <summary>
            Adds a <c>Breakpoint</c> to the list.
            </summary>
            <param name="filePath">Name of file where breakpoint is set.</param>
            <param name="lineNumber">Number of line at which breakpoint is set.</param>
        </member>
        <member name="M:Alternet.Scripter.Debugger.Python.ScriptDebugger.RemoveBreakpoint(System.String,System.Int32)">
            <summary>
            Removes a <c>Breakpoint</c> from the list.
            </summary>
            <param name="filePath">Name of file where breakpoint is set.</param>
            <param name="lineNumber">Number of line at which breakpoint is set.</param>
        </member>
        <member name="M:Alternet.Scripter.Debugger.Python.ScriptDebugger.RunScript(System.String[])">
            <summary>
            Starts executing the script without debugging.
            </summary>
            <param name="args">Optionsl command-line arguments.</param>
        </member>
        <member name="M:Alternet.Scripter.Debugger.Python.ScriptDebugger.RunScriptAsync(System.String[])">
            <summary>
            Starts executing the script without debugging.
            </summary>
            <param name="args">Optionsl command-line arguments.</param>
        </member>
        <member name="M:Alternet.Scripter.Debugger.Python.ScriptDebugger.StartDebugging(Alternet.Scripter.Debugger.StartDebuggingOptions)">
            <summary>
            When implemented by a class, starts executing the program from the entry point with specified settings.
            </summary>
            <param name="options">Settings of debug process.</param>
        </member>
        <member name="T:Alternet.Scripter.Debugger.Python.ScriptDebugger.TraceEvents">
            <summary>
            See https://docs.python.org/2/library/sys.html#sys.settrace
            </summary>
        </member>
        <member name="F:Alternet.Scripter.Debugger.Python.ScriptDebugger.TraceEvents.Call">
            <summary>
            A function is called (or some other code block entered).
            The global trace function is called; arg is None; the return value specifies the local trace function.
            </summary>
        </member>
        <member name="F:Alternet.Scripter.Debugger.Python.ScriptDebugger.TraceEvents.Line">
            <summary>
            The interpreter is about to execute a new line of code or re-execute the condition of a loop.
            The local trace function is called; arg is None; the return value specifies the new local trace function.
            See Objects/lnotab_notes.txt for a detailed explanation of how this works.
            </summary>
        </member>
        <member name="F:Alternet.Scripter.Debugger.Python.ScriptDebugger.TraceEvents.Return">
            <summary>
            A function (or other code block) is about to return.
            The local trace function is called; arg is the value that will be returned,
            or None if the event is caused by an exception being raised.
            The trace function�s return value is ignored.
            </summary>
        </member>
        <member name="F:Alternet.Scripter.Debugger.Python.ScriptDebugger.TraceEvents.Exception">
            <summary>
            An exception has occurred. The local trace function is called; arg is a tuple (exception, value, traceback);
            the return value specifies the new local trace function.
            </summary>
        </member>
        <member name="T:Alternet.Scripter.Debugger.Python.IScriptDebugger">
            <summary>
            Provides methods and properties that allow developers to debug applications in the common language runtime (CLR) environment.
            </summary>
        </member>
        <member name="P:Alternet.Scripter.Debugger.Python.IScriptDebugger.ScriptRun">
            <summary>
            When implemented by a class, contains all information required to compile and run the script
            </summary>
        </member>
        <member name="P:Alternet.Scripter.Debugger.Python.IScriptDebugger.RecursionLimit">
            <summary>
            When implemented by a class, gets or sets an integer value indicating default recursion level.
            </summary>
        </member>
        <member name="M:Alternet.Scripter.Debugger.Python.IScriptDebugger.EnableBreakpoint(System.String,System.Int32,System.Boolean)">
            <summary>
            When implemented by a class, enables or disables specified breakpoint.
            </summary>
            <param name="filePath">Name of file where breakpoint is set.</param>
            <param name="lineNumber">Number of line at which breakpoint is set.</param>
            <param name="enable">New breakpoint's state.</param>
        </member>
        <member name="M:Alternet.Scripter.Debugger.Python.IScriptDebugger.AddBreakpoint(System.String,System.Int32)">
            <summary>
            When implemented by a class, adds a <c>Breakpoint</c> to the list.
            </summary>
            <param name="filePath">Name of file where breakpoint is set.</param>
            <param name="lineNumber">Number of line at which breakpoint is set.</param>
        </member>
        <member name="M:Alternet.Scripter.Debugger.Python.IScriptDebugger.RemoveBreakpoint(System.String,System.Int32)">
            <summary>
            When implemented by a class, removes a <c>Breakpoint</c> from the list.
            </summary>
            <param name="filePath">Name of file where breakpoint is set.</param>
            <param name="lineNumber">Number of line at which breakpoint is set.</param>
        </member>
    </members>
</doc>
